name: Build & deploy to production
on:
  workflow_dispatch:
  push:
    branches:
      - production

jobs:
  build:
    environment: 
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Expose project info
        run: |
          echo "PROJECT_NAME=`jq -r '.name' ./documentation/project_info.json`" >> $GITHUB_ENV
          echo "PROJECT_VERSION=`jq -r '.version' ./documentation/project_info.json`" >> $GITHUB_ENV
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc
          echo "@extrahorizon:registry=https://npm.pkg.github.com" >> .npmrc
          
        env:
         NPM_TOKEN: ${{ secrets.NPM_PACKAGES_FULL_READ_ACCESS_TOKEN }}
         GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_FULL_READ_ACCESS_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
          scope: '@extrahorizon'

      - name: Transpile & publish
        run: |
          yarn
          yarn build
          yarn --production

          zip build.zip -rqX build node_modules .env.example
          if aws lambda list-functions | grep $PROJECT_NAME | grep "FunctionName"; then
            aws lambda update-function-code --region $AWS_REGION --function-name $PROJECT_NAME --zip-file fileb://$PWD/build.zip > /dev/null
          else
            aws lambda create-function --function-name $PROJECT_NAME --zip-file fileb://$PWD/build.zip --handler build.handler --runtime nodejs14.x --role $AWS_ROLE_ID \
            --environment Variables="{API_HOST=$API_HOST,API_OAUTH_CONSUMER_KEY=$API_OAUTH_CONSUMER_KEY,API_OAUTH_CONSUMER_SECRET=$API_OAUTH_CONSUMER_SECRET,API_OAUTH_TOKEN=$API_OAUTH_TOKEN,API_OAUTH_TOKEN_SECRET=$API_OAUTH_TOKEN_SECRET}"
          fi
          
          echo "${PROJECT_NAME} updated successfully to ${AWS_REGION}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ROLE_ID: ${{ secrets.AWS_ROLE_ID }}
          API_HOST: ${{ secrets.API_HOST }}
          API_OAUTH_CONSUMER_KEY: ${{ secrets.API_OAUTH_CONSUMER_KEY }}
          API_OAUTH_CONSUMER_SECRET: ${{ secrets.API_OAUTH_CONSUMER_SECRET }}
          API_OAUTH_TOKEN: ${{ secrets.API_OAUTH_TOKEN }}
          API_OAUTH_TOKEN_SECRET: ${{ secrets.API_OAUTH_TOKEN_SECRET }}
